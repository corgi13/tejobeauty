version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: tejo-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tejo_nails}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      BACKUP_USER_PASSWORD: ${BACKUP_USER_PASSWORD:-backup123}
      MONITOR_USER_PASSWORD: ${MONITOR_USER_PASSWORD:-monitor123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
      - ./database/scripts:/scripts
    ports:
      - "5432:5432"
    networks:
      - tejo-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-tejo_nails}",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s

  # Redis Cache
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: tejo-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
      - redis_backups:/backups
      - ./redis/scripts:/scripts
    ports:
      - "6379:6379"
    networks:
      - tejo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: tejo-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-tejo_nails}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      FRONTEND_URL: https://tejo-nails.com
      PORT: 3002
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3002:3002"
    networks:
      - tejo-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/system-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: tejo-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: https://tejo-nails.com/api
      NEXT_PUBLIC_FRONTEND_URL: https://tejo-nails.com
      PORT: 3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - tejo-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: tejo-nginx
    environment:
      DOMAIN: tejo-nails.com
      ENABLE_LETSENCRYPT: ${ENABLE_LETSENCRYPT:-false}
    volumes:
      - nginx_ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
      - certbot_webroot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tejo-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  redis_data:
    driver: local
  redis_backups:
    driver: local
  nginx_ssl:
    driver: local
  nginx_logs:
    driver: local
  certbot_webroot:
    driver: local

networks:
  tejo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
