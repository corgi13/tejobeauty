"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/i18n/formatters.ts":
/*!********************************!*\
  !*** ./lib/i18n/formatters.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatAddress: function() { return /* binding */ formatAddress; },\n/* harmony export */   formatCurrency: function() { return /* binding */ formatCurrency; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   formatNumber: function() { return /* binding */ formatNumber; },\n/* harmony export */   formatPercentage: function() { return /* binding */ formatPercentage; },\n/* harmony export */   formatPhoneNumber: function() { return /* binding */ formatPhoneNumber; },\n/* harmony export */   getDateFormat: function() { return /* binding */ getDateFormat; },\n/* harmony export */   getDateTimeFormat: function() { return /* binding */ getDateTimeFormat; },\n/* harmony export */   getTimeFormat: function() { return /* binding */ getTimeFormat; }\n/* harmony export */ });\n/**\n * Format a date according to the locale\n * @param date The date to format\n * @param locale The locale to use\n * @param options Additional options for the formatter\n * @returns The formatted date string\n */ function formatDate(date, locale, options) {\n    const dateObj = typeof date === \"string\" || typeof date === \"number\" ? new Date(date) : date;\n    const defaultOptions = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n    };\n    const localeMap = {\n        en: \"en-US\",\n        hr: \"hr-HR\",\n        de: \"de-DE\",\n        it: \"it-IT\",\n        fr: \"fr-FR\",\n        es: \"es-ES\",\n        pt: \"pt-PT\",\n        nl: \"nl-NL\"\n    };\n    return new Intl.DateTimeFormat(localeMap[locale] || \"en-US\", options || defaultOptions).format(dateObj);\n}\n/**\n * Format a number according to the locale\n * @param number The number to format\n * @param locale The locale to use\n * @param options Additional options for the formatter\n * @returns The formatted number string\n */ function formatNumber(number, locale, options) {\n    const localeMap = {\n        en: \"en-US\",\n        hr: \"hr-HR\",\n        de: \"de-DE\",\n        it: \"it-IT\",\n        fr: \"fr-FR\",\n        es: \"es-ES\",\n        pt: \"pt-PT\",\n        nl: \"nl-NL\"\n    };\n    return new Intl.NumberFormat(localeMap[locale] || \"en-US\", options).format(number);\n}\n/**\n * Format a currency amount according to the locale\n * @param amount The amount to format\n * @param locale The locale to use\n * @param currency The currency code (default: EUR for Croatian, USD for English)\n * @returns The formatted currency string\n */ function formatCurrency(amount, locale, currency) {\n    const localeMap = {\n        en: \"en-US\",\n        hr: \"hr-HR\",\n        de: \"de-DE\",\n        it: \"it-IT\",\n        fr: \"fr-FR\",\n        es: \"es-ES\",\n        pt: \"pt-PT\",\n        nl: \"nl-NL\"\n    };\n    const currencyMap = {\n        en: \"USD\",\n        hr: \"EUR\",\n        de: \"EUR\",\n        it: \"EUR\",\n        fr: \"EUR\",\n        es: \"EUR\",\n        pt: \"EUR\",\n        nl: \"EUR\"\n    };\n    const currencyCode = currency || currencyMap[locale] || \"EUR\";\n    return new Intl.NumberFormat(localeMap[locale] || \"en-US\", {\n        style: \"currency\",\n        currency: currencyCode\n    }).format(amount);\n}\n/**\n * Format a percentage according to the locale\n * @param value The value to format as a percentage\n * @param locale The locale to use\n * @param decimals The number of decimal places\n * @returns The formatted percentage string\n */ function formatPercentage(value, locale) {\n    let decimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 2;\n    const localeMap = {\n        en: \"en-US\",\n        hr: \"hr-HR\",\n        de: \"de-DE\",\n        it: \"it-IT\",\n        fr: \"fr-FR\",\n        es: \"es-ES\",\n        pt: \"pt-PT\",\n        nl: \"nl-NL\"\n    };\n    return new Intl.NumberFormat(localeMap[locale] || \"en-US\", {\n        style: \"percent\",\n        minimumFractionDigits: decimals,\n        maximumFractionDigits: decimals\n    }).format(value / 100);\n}\n/**\n * Format a phone number according to the locale\n * @param phoneNumber The phone number to format\n * @param locale The locale to use\n * @returns The formatted phone number\n */ function formatPhoneNumber(phoneNumber, locale) {\n    // Remove all non-digit characters\n    const digits = phoneNumber.replace(/\\D/g, \"\");\n    switch(locale){\n        case \"hr\":\n            // Croatian phone number format: +385 XX XXX XXXX\n            if (digits.startsWith(\"385\")) {\n                return digits.replace(/^(\\d{3})(\\d{2})(\\d{3})(\\d{3,4})$/, \"+$1 $2 $3 $4\");\n            } else if (digits.startsWith(\"0\")) {\n                // Convert 0XX to +385 XX\n                return digits.replace(/^0(\\d{2})(\\d{3})(\\d{3,4})$/, \"+385 $1 $2 $3\");\n            } else {\n                return \"+\" + digits;\n            }\n        case \"de\":\n            // German phone number format: +49 XXX XXXXXXX\n            if (digits.startsWith(\"49\")) {\n                return digits.replace(/^(\\d{2})(\\d{3,4})(\\d{6,7})$/, \"+$1 $2 $3\");\n            } else if (digits.startsWith(\"0\")) {\n                // Convert 0XXX to +49 XXX\n                return digits.replace(/^0(\\d{3,4})(\\d{6,7})$/, \"+49 $1 $2\");\n            } else {\n                return \"+\" + digits;\n            }\n        case \"it\":\n            // Italian phone number format: +39 XXX XXX XXXX\n            if (digits.startsWith(\"39\")) {\n                return digits.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})$/, \"+$1 $2 $3 $4\");\n            } else if (digits.startsWith(\"0\")) {\n                // Convert 0XXX to +39 XXX\n                return digits.replace(/^0(\\d{3})(\\d{3})(\\d{4})$/, \"+39 $1 $2 $3\");\n            } else {\n                return \"+\" + digits;\n            }\n        default:\n            // US phone number format: (XXX) XXX-XXXX\n            if (digits.length === 10) {\n                return digits.replace(/^(\\d{3})(\\d{3})(\\d{4})$/, \"($1) $2-$3\");\n            } else if (digits.startsWith(\"1\") && digits.length === 11) {\n                return digits.replace(/^1(\\d{3})(\\d{3})(\\d{4})$/, \"+1 ($1) $2-$3\");\n            } else {\n                return \"+\" + digits;\n            }\n    }\n}\n/**\n * Format an address according to the locale\n * @param address The address object\n * @param locale The locale to use\n * @returns The formatted address string\n */ function formatAddress(address, locale) {\n    switch(locale){\n        case \"hr\":\n            // Croatian address format\n            return \"\".concat(address.street, \"\\n\").concat(address.postalCode, \" \").concat(address.city, \"\\n\").concat(address.country);\n        case \"de\":\n            // German address format\n            return \"\".concat(address.street, \"\\n\").concat(address.postalCode, \" \").concat(address.city, \"\\n\").concat(address.country);\n        case \"it\":\n            // Italian address format\n            return \"\".concat(address.street, \"\\n\").concat(address.postalCode, \" \").concat(address.city).concat(address.state ? \" (\" + address.state + \")\" : \"\", \"\\n\").concat(address.country);\n        default:\n            // US/International address format\n            return \"\".concat(address.street, \"\\n\").concat(address.city).concat(address.state ? \", \" + address.state : \"\", \" \").concat(address.postalCode, \"\\n\").concat(address.country);\n    }\n}\n/**\n * Get the appropriate date format for a specific locale\n * @param locale The locale\n * @returns The date format pattern\n */ function getDateFormat(locale) {\n    const formatMap = {\n        en: \"MM/DD/YYYY\",\n        hr: \"DD.MM.YYYY.\",\n        de: \"DD.MM.YYYY\",\n        it: \"DD/MM/YYYY\"\n    };\n    return formatMap[locale] || \"MM/DD/YYYY\";\n}\n/**\n * Get the appropriate time format for a specific locale\n * @param locale The locale\n * @returns The time format pattern\n */ function getTimeFormat(locale) {\n    const formatMap = {\n        en: \"h:mm A\",\n        hr: \"HH:mm\",\n        de: \"HH:mm\",\n        it: \"HH:mm\"\n    };\n    return formatMap[locale] || \"h:mm A\";\n}\n/**\n * Get the appropriate date-time format for a specific locale\n * @param locale The locale\n * @returns The date-time format pattern\n */ function getDateTimeFormat(locale) {\n    const formatMap = {\n        en: \"MM/DD/YYYY h:mm A\",\n        hr: \"DD.MM.YYYY. HH:mm\",\n        de: \"DD.MM.YYYY HH:mm\",\n        it: \"DD/MM/YYYY HH:mm\"\n    };\n    return formatMap[locale] || \"MM/DD/YYYY h:mm A\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/i18n/formatters.ts\n"));

/***/ })

});