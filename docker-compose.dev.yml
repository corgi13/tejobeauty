version: "3.8"

# Development-specific overrides for hot reload and development features
services:
  # Backend with enhanced development features
  backend:
    build:
      target: development
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-tejo_nails_dev}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      FRONTEND_URL: https://tejo-nails.com
      PORT: 3002
      # Development-specific environment variables
      LOG_LEVEL: debug
      ENABLE_CORS: true
      ENABLE_SWAGGER: true
    volumes:
      # Hot reload volumes
      - ./backend:/app
      - /app/node_modules
      - /app/dist
      # Additional development volumes
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - ./backend/test:/app/test
    command: >
      sh -c "
        echo 'Starting development backend with hot reload...'
        rm -rf /app/dist || true
        npm run start:dev
      "
    # Development-specific health check with more lenient timing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/system-health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s

  # Frontend with enhanced development features
  frontend:
    build:
      target: development
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: https://tejo-nails.com/api
      NEXT_PUBLIC_FRONTEND_URL: https://tejo-nails.com
      PORT: 3000
      # Development-specific environment variables
      NEXT_PUBLIC_ENABLE_DEVTOOLS: true
      FAST_REFRESH: true
      WATCHPACK_POLLING: true
    volumes:
      # Hot reload volumes
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      # Additional development volumes for better hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/styles:/app/styles
      - ./frontend/components:/app/components
      - ./frontend/pages:/app/pages
      - ./frontend/lib:/app/lib
    command: >
      sh -c "
        echo 'Starting development frontend with hot reload...'
        npm run dev -- --hostname 0.0.0.0
      "
    # Development-specific health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 30s

  # PostgreSQL with development-specific settings
  postgres:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tejo_nails_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      BACKUP_USER_PASSWORD: ${BACKUP_USER_PASSWORD:-backup123}
      MONITOR_USER_PASSWORD: ${MONITOR_USER_PASSWORD:-monitor123}
      # Development-specific settings
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - postgres_backups:/backups
      - ./database/scripts:/scripts
      # Development SQL scripts
      - ./database/dev-data:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements

  # Redis with development-specific settings
  redis:
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_dev_data:/data
      - redis_backups:/backups
      - ./redis/scripts:/scripts
    ports:
      - "6380:6379"
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redis123}
      --appendonly yes
      --appendfsync everysec
      --save 60 1000

  # Nginx with development-specific configuration
  nginx:
    environment:
      DOMAIN: tejo-nails.com
      ENABLE_LETSENCRYPT: ${ENABLE_LETSENCRYPT:-false}
      # Development-specific settings
      NGINX_LOG_LEVEL: debug
      ENABLE_ACCESS_LOG: true
    volumes:
      - nginx_ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
      - certbot_webroot:/var/www/certbot
      # Development configuration override
      - ./nginx/conf.d/development.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      - "443:443"

  # Development tools container
  dev-tools:
    image: node:18-alpine
    container_name: tejo-dev-tools
    working_dir: /workspace
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - tejo-network
    command: >
      sh -c "
        echo 'Development tools container ready'
        apk add --no-cache curl git docker-cli
        tail -f /dev/null
      "
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

# Development-specific network configuration
networks:
  tejo-network:
    driver: bridge
