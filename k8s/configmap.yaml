apiVersion: v1
kind: ConfigMap
metadata:
  name: tejo-config
  namespace: tejo-nails
  labels:
    app: tejo-nails
data:
  # Application URLs - Croatian Market
  frontend-url: "https://tejo-nails.hr"
  api-url: "https://tejo-nails.hr/api"

  # Environment settings
  node-env: "production"
  log-level: "info"

  # Database settings
  postgres-db: "tejo_nails"
  postgres-user: "postgres"

  # Redis settings
  redis-host: "redis-service"
  redis-port: "6379"

  # Application settings
  cors-enabled: "true"
  swagger-enabled: "false"
  rate-limit-enabled: "true"

  # Monitoring settings
  metrics-enabled: "true"
  health-check-enabled: "true"

  # SSL/TLS settings
  ssl-enabled: "true"
  force-https: "true"

  # File upload settings
  max-file-size: "10485760" # 10MB
  allowed-file-types: "image/jpeg,image/png,image/gif,image/webp"

  # Email settings (non-sensitive)
  email-from-name: "Tejo Nails Platform"

  # Cache settings
  cache-ttl: "3600" # 1 hour
  cache-enabled: "true"

  # Search settings
  search-enabled: "true"
  search-results-per-page: "20"

  # Pagination settings
  default-page-size: "20"
  max-page-size: "100"

  # Session settings
  session-timeout: "86400" # 24 hours

  # Rate limiting settings
  rate-limit-window: "900" # 15 minutes
  rate-limit-max: "1000" # requests per window

  # Backup settings
  backup-enabled: "true"
  backup-schedule: "0 2 * * *" # Daily at 2 AM
  backup-retention-days: "30"

  # Croatian Market Settings
  default-locale: "hr"
  default-currency: "EUR"
  default-timezone: "Europe/Zagreb"
  croatia-tax-enabled: "true"
  croatia-shipping-enabled: "true"
  croatia-business-features: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: tejo-nails
  labels:
    app: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream definitions
        upstream frontend {
            server frontend-service:3000;
            keepalive 32;
        }

        upstream backend {
            server backend-service:3002;
            keepalive 32;
        }

        # Main server configuration
        server {
            listen 80;
            listen [::]:80;
            server_name tejo-nails.hr www.tejo-nails.hr;

            # Let's Encrypt challenge
            location /.well-known/acme-challenge/ {
                root /var/www/certbot;
            }

            # Redirect HTTP to HTTPS
            location / {
                return 301 https://$server_name$request_uri;
            }
        }

        server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name tejo-nails.hr www.tejo-nails.hr;

            # SSL configuration
            ssl_certificate /etc/nginx/ssl/live/tejo-nails.hr/fullchain.pem;
            ssl_private_key /etc/nginx/ssl/live/tejo-nails.hr/privkey.pem;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }

            # Authentication routes with stricter rate limiting
            location /api/auth/ {
                limit_req zone=auth burst=10 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Static assets with caching
            location /_next/static/ {
                proxy_pass http://frontend;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # Frontend routes
            location / {
                proxy_pass http://frontend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }

            # Error pages
            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: tejo-nails
  labels:
    app: postgres
data:
  postgresql.conf: |
    # PostgreSQL configuration for production

    # Connection settings
    listen_addresses = '*'
    port = 5432
    max_connections = 200

    # Memory settings
    shared_buffers = 256MB
    effective_cache_size = 1GB
    work_mem = 4MB
    maintenance_work_mem = 64MB

    # WAL settings
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB
    checkpoint_completion_target = 0.9

    # Logging settings
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_rotation_age = 1d
    log_rotation_size = 100MB
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

    # Performance settings
    random_page_cost = 1.1
    effective_io_concurrency = 200

    # Autovacuum settings
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 1min

  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration File

    # TYPE  DATABASE        USER            ADDRESS                 METHOD

    # "local" is for Unix domain socket connections only
    local   all             all                                     trust

    # IPv4 local connections:
    host    all             all             127.0.0.1/32            md5

    # IPv6 local connections:
    host    all             all             ::1/128                 md5

    # Allow connections from within the cluster
    host    all             all             10.0.0.0/8              md5
    host    all             all             172.16.0.0/12           md5
    host    all             all             192.168.0.0/16          md5
